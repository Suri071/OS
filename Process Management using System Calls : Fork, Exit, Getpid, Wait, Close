#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>

int main() {
    int child_pid;
    
    // Fork a child process
    child_pid = fork();
    
    if (child_pid == -1) {
        perror("Fork failed");
        return 1;
    }
    
    if (child_pid == 0) {
        // This is the child process
        
        printf("Child Process:\n");
        printf("PID: %d\n", getpid());
        printf("Parent PID: %d\n", getppid());
        
        printf("Child process exiting...\n");
        exit(0);
    } else {
        // This is the parent process
        
        printf("Parent Process:\n");
        printf("PID: %d\n", getpid());
        
        int status;
        wait(&status); // Wait for the child process to exit
        
        printf("Child process has exited.\n");
        
        printf("Parent process closing...\n");
    }
    
    return 0;
}
